[project]
name = "starship-sim"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Codex", email = "codex@openai.com" }
]
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.11.9",
    "structlog>=25.4.0",
    "typer>=0.17.4",
    "typing-extensions>=4.15.0",
    "textual>=0.79.1",
    "PySide6>=6.9.2",
]

[tool.black]
line-length = 100
extend-exclude = "docs"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "freezegun>=1.5.5",
    "hypothesis>=6.138.15",
    "mypy>=1.18.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.0.0",
    "ruff>=0.13.0",
]

[tool.pytest.ini_options]
testpaths = ["engine/tests", "ui/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=engine",
    "--cov=ui",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=30",
]

[tool.coverage.run]
source = ["engine", "ui"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.vulture]
min_confidence = 30
exclude = ["docs", "htmlcov", "__pycache__"]
ignore_names = ["cls", "*_validate_*", "spawn_*", "list_events", "compose", "on_mount"]
